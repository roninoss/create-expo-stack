<% if (props.stylingPackage?.name === "nativewind") { %>
  import '../global.css';
<% } else if (props.stylingPackage?.name === "nativewinui") { %>
  import '../global.css';
  import 'expo-dev-client';
<% } %>

<% if (props.internalizationPackage?.name === "i18next") { %>
  import '../translation';
<% } %>

import 'react-native-gesture-handler';
import { GestureHandlerRootView } from 'react-native-gesture-handler';
import { Stack } from 'expo-router';

<% if (props.stylingPackage?.name === "unistyles") { %>
  import { useUnistyles } from "react-native-unistyles";
<% } %>

<% if (props.analyticsPackage?.name === "vexo-analytics") { %>
  import { vexo } from 'vexo-analytics';

  vexo(process.env.EXPO_PUBLIC_VEXO_API_KEY);
<% } %>

export const unstable_settings = {
  // Ensure that reloading on `/modal` keeps a back button present.
  initialRouteName: "(drawer)",
};

export default function RootLayout() {
  <% if (props.stylingPackage?.name === "unistyles") { %>
    const { theme } = useUnistyles();
  <% } %>

  return (
        <GestureHandlerRootView style={{ flex: 1 }}>
         <% if (props.stylingPackage?.name === "unistyles") { %>
            <Stack
                screenOptions={{
                    headerStyle: {
                        backgroundColor: theme.colors.background,
                    },
                    headerTitleStyle: {
                        color: theme.colors.typography,
                    },
                    headerTintColor: theme.colors.typography,
                    drawerStyle: {
                        backgroundColor: theme.colors.background,
                    },
                    drawerLabelStyle: {
                        color: theme.colors.typography,
                    },
                    drawerInactiveTintColor: theme.colors.typography,
                }}
            >
        <% } else  { %>
          <Stack>
        <% } %>
            <Stack.Screen name="(drawer)" options={{ headerShown: false }} />
            <Stack.Screen name="modal" options={{ title: 'Modal', presentation: 'modal' }} />
          </Stack>
        </GestureHandlerRootView>
  );
}
